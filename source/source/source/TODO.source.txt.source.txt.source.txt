//1. Adjust reset and fall timing so both players match - need to make player 1 match 9 moves (to Turn 10 in code)
2. Add hittests for both players upon box "landing", before reset.
3. Make cage bottom transparent
4. Turn player1 into 2D side-scrolling veiw
//5. Turn-based logic
//6. Database functionaliy
//7. PHP backend/API
//8. Grid Framework
//9. Automatic animation and framework code
10. Change graphics - both should be aerial (top-down or bottom-up)
11. Ensure gameplay - you don't know what the other move is until you move (introduce element of luck) - on the last scene, both players see a cutscene while a killing or escaping animation takes place
12. Add new variable to be transmitted back and forth to keep track of who won - otherwise player 1 detects the winner afet 8 turns (first), but then player 2 could make a move to change the outcome (turn 9)
	Since player 1 detects first, have him send the win or loss.
	BETTER IDEA! On the last "turn" (turn 9) in the code, player 2 cannot make a move, just watch the last move of p1. (Send in blank variables, progress. Set up some method to keep track of turns, and impliment this on the last one)
		tl;dr T8: P1 makes final move, plays win sequence T9: p2 submits blank move (no change), animates final p1 move,then does same win sequence
13. Impliment obstacles in flash that are already in PHP and db

Rafay
1. Character (all angles)
2. Into animation/story line
3. Begin Screen
4. Final kill/escape animation
5. End screen

Yasyf
1. Gameplay (see #10 and #11 above)
2. Highscores
3. Game to game interaction (what happens when one "match" finishes, and how to cut to cutscenes from game) - consider some sort of overlay (loadMovieClip?)
4. Multiplayer mechanism for end-of-game / last turn results (see #11 above) - Hittest nessecery?
5. Implement obstacles - 0,1, or 2 (numb) randomly generated by PHP on database init, and then location (x,y) also generated - then sent to both clients who receive and put in game (before start)